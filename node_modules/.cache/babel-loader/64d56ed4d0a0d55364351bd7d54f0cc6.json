{"ast":null,"code":"var _jsxFileName = \"/Users/felipetoniolo/CODE/ReactFundamentals/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport AddAuthorForm from './AddAuthorForm';\nimport register from './serviceWorker';\nimport { shuffle, sample } from 'underscore';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\nvar authors = [{\n  name: 'Mark Twain',\n  imageUrl: 'images/authors/marktwain.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['The Adventure os Huckleberry Finn', 'Life on the Mississippi', 'Roughing It']\n}, {\n  name: 'Joseph Conrad',\n  imageUrl: 'images/authors/josephconrad.png',\n  imageSource: 'Wikimedia Commons',\n  books: [' Heart od Darkness ']\n}, {\n  name: 'Stephen King',\n  imageUrl: 'images/authors/stephenking.jpg',\n  imageSource: 'Wikimedia Commons',\n  imageAttribution: 'Pinguino',\n  books: ['The Shining', 'IT']\n}, {\n  name: 'Charles Dickens',\n  imageUrl: 'images/authors/charlesdickens.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['David Copperfield', 'A Tale of Two City', 'Roughing It']\n}, {\n  name: 'William Shakespeare',\n  imageUrl: 'images/authors/williamshakespeare.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Hamlet', 'Macbeth', 'Romeo and Juliet']\n}, {\n  name: 'Joanne Rowling',\n  imageUrl: 'images/authors/jkrowling.jpg',\n  imageSource: 'Wikimedia Commons',\n  imageAttribution: 'Pinguino',\n  books: [' Harry Potter and the Sorcerers Stone ']\n}];\n\nfunction getTurnData(authors) {\n  var allBooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []);\n  var fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  var answer = sample(fourRandomBooks);\n  return {\n    books: fourRandomBooks,\n    author: authors.find(function (author) {\n      return author.books.some(function (title) {\n        return title === answer;\n      });\n    })\n  };\n}\n\nfunction resetState() {\n  return {\n    turnData: getTurnData(authors),\n    highlight: ''\n  };\n}\n\nvar store = Redux.createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nvar state = resetState();\n\nfunction onAnswerSelected(answer) {\n  var isCorrect = state.turnData.author.books.some(function (book) {\n    return book === answer;\n  });\n  state.highlight = isCorrect ? 'correct' : 'wrong';\n  render();\n}\n\nfunction App() {\n  return React.createElement(AuthorQuiz, Object.assign({}, state, {\n    onAnswerSelected: onAnswerSelected,\n    onContinue: function onContinue() {\n      state = resetState();\n      render();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n}\n\nvar AuthorWrapper = withRouter(function (_ref) {\n  var history = _ref.history;\n  return React.createElement(AddAuthorForm, {\n    onAddAuthor: function onAddAuthor(author) {\n      authors.push(author);\n      history.push('/');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  });\n});\n\nfunction render() {\n  ReactDOM.render(React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(ReactRedux.Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: App,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/add\",\n    component: AuthorWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })))), document.getElementById('root'));\n}\n\nrender(); // register();\n// registerServiceWorker();","map":{"version":3,"sources":["/Users/felipetoniolo/CODE/ReactFundamentals/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Route","withRouter","AuthorQuiz","AddAuthorForm","register","shuffle","sample","Redux","ReactRedux","authors","name","imageUrl","imageSource","books","imageAttribution","getTurnData","allBooks","reduce","p","c","i","concat","fourRandomBooks","slice","answer","author","find","some","title","resetState","turnData","highlight","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","state","onAnswerSelected","isCorrect","book","render","App","AuthorWrapper","history","push","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport AddAuthorForm from './AddAuthorForm';\nimport register from './serviceWorker';\nimport {shuffle, sample} from 'underscore';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\n\nconst authors = [\n    {\n        name: 'Mark Twain',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['The Adventure os Huckleberry Finn',\n                'Life on the Mississippi',\n                'Roughing It' ]\n    },\n    {\n        name: 'Joseph Conrad',\n        imageUrl: 'images/authors/josephconrad.png',\n        imageSource: 'Wikimedia Commons',\n        books: [' Heart od Darkness ' ]\n    },\n    {\n        name: 'Stephen King',\n        imageUrl: 'images/authors/stephenking.jpg',\n        imageSource: 'Wikimedia Commons',\n        imageAttribution: 'Pinguino',\n        books: ['The Shining',\n                'IT' ]\n    },\n    {\n        name: 'Charles Dickens',\n        imageUrl: 'images/authors/charlesdickens.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['David Copperfield',\n                'A Tale of Two City',\n                'Roughing It' ]\n    },\n    {\n        name: 'William Shakespeare',\n        imageUrl: 'images/authors/williamshakespeare.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['Hamlet',\n                'Macbeth',\n                'Romeo and Juliet' ]\n    },\n    {\n        name: 'Joanne Rowling',\n        imageUrl: 'images/authors/jkrowling.jpg',\n        imageSource: 'Wikimedia Commons',\n        imageAttribution: 'Pinguino',\n        books: [' Harry Potter and the Sorcerers Stone ' ]\n    }\n\n];\n\nfunction getTurnData(authors) {\n    const allBooks = authors.reduce(function (p, c, i) {\n        return p.concat(c.books);\n    }, []);\n    const fourRandomBooks = shuffle(allBooks).slice(0,4);\n    const answer = sample(fourRandomBooks);\n\n    return {\n        books: fourRandomBooks,\n        author: authors.find((author) => \n            author.books.some((title) => \n                title === answer))\n    }\n}\n\nfunction resetState() {\n    return { \n        turnData: getTurnData(authors),\n        highlight: ''\n    };\n} \n\nlet store = Redux.createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nlet state = resetState();\n\nfunction onAnswerSelected(answer) {\n    const isCorrect = state.turnData.author.books.some((book) => book === answer);\n    state.highlight = isCorrect ? 'correct' : 'wrong';\n    render();\n}\n\nfunction App (){\n    return <AuthorQuiz {...state} \n    onAnswerSelected={onAnswerSelected} \n    onContinue={() => {\n        state = resetState();\n        render();\n    }}/>;\n}\n\nconst AuthorWrapper = withRouter (({ history }) =>\n    <AddAuthorForm onAddAuthor={(author)=> {\n        authors.push(author);\n        history.push('/');\n    }}/>\n);\n\nfunction render(){\n    ReactDOM.render(\n    <BrowserRouter>\n        <ReactRedux.Provider store={store}>\n            <React.Fragment>\n                <Route exact path=\"/\" component={App} />\n                <Route path=\"/add\" component={AuthorWrapper} />\n            </React.Fragment>\n        </ReactRedux.Provider>\n    </BrowserRouter>, document.getElementById('root'));\n}\nrender();\n    // register();\n// registerServiceWorker();"]},"metadata":{},"sourceType":"module"}