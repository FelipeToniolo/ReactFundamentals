{"ast":null,"code":"var _jsxFileName = \"/Users/felipetoniolo/CODE/ReactFundamentals/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport AuthorQuiz from \"./AuthorQuiz\"; //underscore library\n\nimport { shuffle, sample } from \"underscore\"; //import from react router library\n\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport AddAuthorForm from './AddAuthorForm';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\nvar authors = [{\n  name: \"Mark Twain\",\n  imageUrl: \"../authors/marktwain.jpg\",\n  imageSource: \"Wikimedia Commons\",\n  books: [\"The Adventures of Huckleberry Finn\"]\n}, {\n  name: \"Joseph Conrad\",\n  imageUrl: \"../authors/josephconrad.png\",\n  imageSource: \"Wikimedia Commons\",\n  books: [\"Heart of Darkness\"]\n}, {\n  name: \"J.K. Rowling\",\n  imageUrl: \"../authors/jkrowling.jpg\",\n  imageSource: \"Wikimedia Commons\",\n  imageAttribution: \"Daniel Ogren\",\n  books: [\"Harry Potter and the Sorcerers Stone\"]\n}, {\n  name: \"Stephen King\",\n  imageUrl: \"../authors/stephenking.jpg\",\n  imageSource: \"Wikimedia Commons\",\n  imageAttribution: \"Pinguino\",\n  books: [\"The Shining\", \"IT\"]\n}, {\n  name: \"Charles Dickens\",\n  imageUrl: \"../authors/charlesdickens.jpg\",\n  imageSource: \"Wikimedia Commons\",\n  books: [\"David Copperfield\", \"A Tale of Two Cities\"]\n}, {\n  name: \"William Shakespeare\",\n  imageUrl: \"../authors/williamshakespeare.jpg\",\n  imageSource: \"Wikimedia Commons\",\n  books: [\"Hamlet\", \"Macbeth\", \"Romeo and Juliet\"]\n}]; //getTurnData=> select a set of possible answer,shuffling and choosing the first four\n\nfunction getTurnData(authors) {\n  var allBooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []); //using underscore library to shuffle list in random order\n\n  var fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  var answer = sample(fourRandomBooks);\n  return {\n    books: fourRandomBooks,\n    //to find an author such that the author's books collection contains a books where the tiltle is equal to answer we choose\n    author: authors.find(function (author) {\n      return author.books.some(function (title) {\n        return title === answer;\n      });\n    })\n  };\n}\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    authors: authors,\n    turnData: getTurnData(authors),\n    highlight: ''\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ANSWER_SELECTED':\n      var isCorrect = state.turnData.author.books.some(function (book) {\n        return book === action.answer;\n      });\n      return Object.assign({}, state, {\n        highlight: isCorrect ? 'correct' : 'wrong'\n      });\n\n    case 'CONTINUE':\n      return Object.assign({}, state, {\n        highlight: '',\n        turnData: getTurnData(state.authors)\n      });\n\n    case 'ADD_AUTHOR':\n      return Object.assign({}, state, {\n        authors: state.authors.concat([action.author])\n      });\n\n    default:\n      return state;\n  }\n}\n/*const state = {\n  //function to call author data\n  turnData: getTurnData(authors),\n  highlight: \"\"\n};\n//onAnswerSelected\nfunction onAnswerSelected(answer) {\n  //checking whether title of the book selected is right or wrong\n  const isCorrect = state.turnData.author.books.some(book => book === answer);\n  //based on correct value we select highlight\n  state.highlight = isCorrect ? \"correct\" : \"wrong\";\n  //calling render\n  render();\n}}*/\n//but above don't reflect any change on UI,as we are not updating to React\n//reder function to update changes to React\n//authorQuiz receives props => turnData\n\n\nvar store = Redux.createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render(React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, React.createElement(ReactRedux.Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}, React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: AuthorQuiz,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/add\",\n  component: AddAuthorForm,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n})))), document.getElementById('root'));","map":{"version":3,"sources":["/Users/felipetoniolo/CODE/ReactFundamentals/src/index.js"],"names":["React","ReactDOM","registerServiceWorker","AuthorQuiz","shuffle","sample","BrowserRouter","Route","AddAuthorForm","Redux","ReactRedux","authors","name","imageUrl","imageSource","books","imageAttribution","getTurnData","allBooks","reduce","p","c","i","concat","fourRandomBooks","slice","answer","author","find","some","title","reducer","state","turnData","highlight","action","type","isCorrect","book","Object","assign","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport AuthorQuiz from \"./AuthorQuiz\";\n//underscore library\nimport { shuffle, sample } from \"underscore\";\n//import from react router library\nimport { BrowserRouter ,Route} from 'react-router-dom';\nimport AddAuthorForm from './AddAuthorForm';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\n\nconst authors = [\n  {\n    name: \"Mark Twain\",\n    imageUrl: \"../authors/marktwain.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    books: [\"The Adventures of Huckleberry Finn\"]\n  },\n  {\n    name: \"Joseph Conrad\",\n    imageUrl: \"../authors/josephconrad.png\",\n    imageSource: \"Wikimedia Commons\",\n    books: [\"Heart of Darkness\"]\n  },\n  {\n    name: \"J.K. Rowling\",\n    imageUrl: \"../authors/jkrowling.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    imageAttribution: \"Daniel Ogren\",\n    books: [\"Harry Potter and the Sorcerers Stone\"]\n  },\n  {\n    name: \"Stephen King\",\n    imageUrl: \"../authors/stephenking.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    imageAttribution: \"Pinguino\",\n    books: [\"The Shining\", \"IT\"]\n  },\n  {\n    name: \"Charles Dickens\",\n    imageUrl: \"../authors/charlesdickens.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    books: [\"David Copperfield\", \"A Tale of Two Cities\"]\n  },\n  {\n    name: \"William Shakespeare\",\n    imageUrl: \"../authors/williamshakespeare.jpg\",\n    imageSource: \"Wikimedia Commons\",\n    books: [\"Hamlet\", \"Macbeth\", \"Romeo and Juliet\"]\n  }\n];\n\n//getTurnData=> select a set of possible answer,shuffling and choosing the first four\n\nfunction getTurnData(authors) {\n  const allBooks = authors.reduce(function(p, c, i) {\n    return p.concat(c.books);\n  }, []);\n  //using underscore library to shuffle list in random order\n  const fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n\n  return {\n    books: fourRandomBooks,\n    //to find an author such that the author's books collection contains a books where the tiltle is equal to answer we choose\n    author: authors.find(author => \n        author.books.some(title => \n        title === answer))\n  };\n}\nfunction reducer(\n  state = { authors, turnData: getTurnData(authors), highlight: '' }, \n  action) {\n    switch (action.type) {\n      case 'ANSWER_SELECTED':\n        const isCorrect = state.turnData.author.books.some((book) => book === action.answer);\n        return Object.assign(\n          {}, \n          state, { \n            highlight: isCorrect ? 'correct' : 'wrong'\n          });\n      case 'CONTINUE': \n          return Object.assign({}, state, { \n            highlight: '',\n            turnData: getTurnData(state.authors)\n          });\n      case 'ADD_AUTHOR':\n          return Object.assign({}, state, {\n            authors: state.authors.concat([action.author])\n          });\n      default: return state;\n    }\n}\n/*const state = {\n  //function to call author data\n  turnData: getTurnData(authors),\n  highlight: \"\"\n};\n//onAnswerSelected\nfunction onAnswerSelected(answer) {\n  //checking whether title of the book selected is right or wrong\n  const isCorrect = state.turnData.author.books.some(book => book === answer);\n  //based on correct value we select highlight\n  state.highlight = isCorrect ? \"correct\" : \"wrong\";\n  //calling render\n  render();\n}}*/\n\n\n//but above don't reflect any change on UI,as we are not updating to React\n\n//reder function to update changes to React\n\n  //authorQuiz receives props => turnData\n  let store = Redux.createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  \n  ReactDOM.render(\n    <BrowserRouter>\n      <ReactRedux.Provider store={store}>\n        <React.Fragment>\n          <Route exact path=\"/\" component={AuthorQuiz} />\n          <Route path=\"/add\" component={AddAuthorForm} />\n        </React.Fragment>\n      </ReactRedux.Provider>\n    </BrowserRouter>, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}