{"map":"{\"version\":3,\"sources\":[\"/Users/felipetoniolo/CODE/ReactFundamentals/src/AuthorQuiz.js\",\"/Users/felipetoniolo/CODE/ReactFundamentals/src/serviceWorker.js\",\"/Users/felipetoniolo/CODE/ReactFundamentals/src/index.js\"],\"names\":[\"Hero\",\"react_default\",\"a\",\"createElement\",\"className\",\"Book\",\"_ref\",\"title\",\"Turn\",\"_ref2\",\"author\",\"books\",\"style\",\"backgroundColor\",\"src\",\"imageUrl\",\"alt\",\"map\",\"key\",\"Continue\",\"Footer\",\"id\",\"href\",\"AuthorQuiz\",\"_ref3\",\"turnData\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"state\",\"authors\",\"allBooks\",\"reduce\",\"p\",\"c\",\"i\",\"concat\",\"book\",\"fourRandomBooks\",\"shuffle\",\"slice\",\"answer\",\"sample\",\"find\",\"some\",\"getTurnData\",\"name\",\"imageSource\",\"imageAttribution\",\"ReactDOM\",\"render\",\"src_AuthorQuiz\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport './App.css';\\nimport './bootstrap.min.css';\\n\\nfunction Hero() {\\n  return (<div className=\\\"row\\\">\\n    <div className=\\\"jumbotron col-10 offset-1\\\">\\n      <h1>Author Quiz</h1>\\n      <p>Select the book written by the author shown</p>\\n    </div>\\n  </div>);\\n}\\n\\nfunction Book({title}) {\\n  return (<div className=\\\"answer\\\">\\n    <h4>{title}</h4>\\n  </div>\\n  );\\n}\\n\\nfunction Turn({ author, books}) {\\n    return (<div className=\\\"row turn\\\"style={{backgroundColor: \\\"white\\\"}}>\\n    <div className=\\\" col-4 offset-1\\\">\\n      <img src={author.imageUrl} className=\\\"authorimage\\\" alt=\\\"Author\\\" />\\n    </div>\\n    <div className=\\\"col-6\\\">\\n      {books.map((title) => <Book title={title} key={title}></Book>)}\\n    </div>\\n  </div>);\\n}\\n\\nfunction Continue() {\\n    return (<div/>);\\n}\\n\\nfunction Footer() {\\n  return (<div id=\\\"footer\\\" className=\\\"row\\\">\\n    <div className=\\\"col-12\\\">\\n      <p className=\\\"text-muted credit\\\">\\n        All image are from <a href=\\\"http://commons.wikimedia.org/wiki/Main_Page\\\">Wikemedia Commons</a> and are in the public domain\\n      </p>\\n    </div>\\n  </div>);\\n}\\n\\n\\nfunction AuthorQuiz ({turnData}) {\\n  return (\\n    <div className=\\\"container-fluid\\\">\\n      <Hero />\\n      <Turn {...turnData} />\\n      <Continue />\\n      <Footer />\\n    </div>\\n\\n  );\\n}\\n\\nexport default AuthorQuiz;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport AuthorQuiz from './AuthorQuiz';\\nimport register from './serviceWorker';\\nimport {shuffle, sample} from 'underscore';\\n\\nconst authors = [\\n    {\\n        name: 'Mark Twain',\\n        imageUrl: 'images/authors/marktwain.jpg',\\n        imageSource: 'Wikimedia Commons',\\n        books: ['The Adventure os Huckleberry Finn',\\n                'Life on the Mississippi',\\n                'Roughing It' ]\\n    },\\n    {\\n        name: 'Joseph Conrad',\\n        imageUrl: 'images/authors/josephconrad.png',\\n        imageSource: 'Wikimedia Commons',\\n        books: [' Heart od Darkness ' ]\\n    },\\n    {\\n        name: 'Stephen King',\\n        imageUrl: 'images/authors/stephenking.jpg',\\n        imageSource: 'Wikimedia Commons',\\n        imageAttribution: 'Pinguino',\\n        books: ['The Shining',\\n                'IT' ]\\n    },\\n    {\\n        name: 'Charles Dickens',\\n        imageUrl: 'images/authors/charlesdickens.jpg',\\n        imageSource: 'Wikimedia Commons',\\n        books: ['David Copperfield',\\n                'A Tale of Two City',\\n                'Roughing It' ]\\n    },\\n    {\\n        name: 'William Shakespeare',\\n        imageUrl: 'images/authors/williamshakespeare.jpg',\\n        imageSource: 'Wikimedia Commons',\\n        books: ['Hamlet',\\n                'Macbeth',\\n                'Romeo and Juliet' ]\\n    },\\n    {\\n        name: 'Joanne Rowling',\\n        imageUrl: 'images/authors/jkrowling.jpg',\\n        imageSource: 'Wikimedia Commons',\\n        imageAttribution: 'Pinguino',\\n        books: [' Harry Potter and the Sorcerers Stone ' ]\\n    }\\n\\n];\\n\\nfunction getTurnData(authors) {\\n    const allBooks = authors.reduce(function (p, c, i) {\\n        return p.concat(c.book);\\n    }, []);\\n    const fourRandomBooks = shuffle(allBooks).slice(0,4);\\n    const answer = sample(fourRandomBooks);\\n\\n    return {\\n        books: fourRandomBooks,\\n        author: authors.find((author) => \\n            author.books.some((title) => \\n                title === answer))\\n    }\\n}\\n\\nconst state = {\\n    turnData: getTurnData(authors)\\n};\\n\\nReactDOM.render(<AuthorQuiz {...state}/>, document.getElementById('root'));\\n// registerServiceWorker();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,function(e,a,n){e.exports=n(17)},,,,,function(e,a,n){},,function(e,a,n){},,function(e,a,n){},,,function(e,a,n){\"use strict\";n.r(a);var t=n(0),o=n.n(t),i=n(4),r=n.n(i);n(10),n(12),n(14);function m(){return o.a.createElement(\"div\",{className:\"row\"},o.a.createElement(\"div\",{className:\"jumbotron col-10 offset-1\"},o.a.createElement(\"h1\",null,\"Author Quiz\"),o.a.createElement(\"p\",null,\"Select the book written by the author shown\")))}function l(e){var a=e.title;return o.a.createElement(\"div\",{className:\"answer\"},o.a.createElement(\"h4\",null,a))}function s(e){var a=e.author,n=e.books;return o.a.createElement(\"div\",{className:\"row turn\",style:{backgroundColor:\"white\"}},o.a.createElement(\"div\",{className:\" col-4 offset-1\"},o.a.createElement(\"img\",{src:a.imageUrl,className:\"authorimage\",alt:\"Author\"})),o.a.createElement(\"div\",{className:\"col-6\"},n.map(function(e){return o.a.createElement(l,{title:e,key:e})})))}function c(){return o.a.createElement(\"div\",null)}function u(){return o.a.createElement(\"div\",{id:\"footer\",className:\"row\"},o.a.createElement(\"div\",{className:\"col-12\"},o.a.createElement(\"p\",{className:\"text-muted credit\"},\"All image are from \",o.a.createElement(\"a\",{href:\"http://commons.wikimedia.org/wiki/Main_Page\"},\"Wikemedia Commons\"),\" and are in the public domain\")))}var g=function(e){var a=e.turnData;return o.a.createElement(\"div\",{className:\"container-fluid\"},o.a.createElement(m,null),o.a.createElement(s,a),o.a.createElement(c,null),o.a.createElement(u,null))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var d=n(1);var h={turnData:function(e){var a=e.reduce(function(e,a,n){return e.concat(a.book)},[]),n=Object(d.shuffle)(a).slice(0,4),t=Object(d.sample)(n);return{books:n,author:e.find(function(e){return e.books.some(function(e){return e===t})})}}([{name:\"Mark Twain\",imageUrl:\"images/authors/marktwain.jpg\",imageSource:\"Wikimedia Commons\",books:[\"The Adventure os Huckleberry Finn\",\"Life on the Mississippi\",\"Roughing It\"]},{name:\"Joseph Conrad\",imageUrl:\"images/authors/josephconrad.png\",imageSource:\"Wikimedia Commons\",books:[\" Heart od Darkness \"]},{name:\"Stephen King\",imageUrl:\"images/authors/stephenking.jpg\",imageSource:\"Wikimedia Commons\",imageAttribution:\"Pinguino\",books:[\"The Shining\",\"IT\"]},{name:\"Charles Dickens\",imageUrl:\"images/authors/charlesdickens.jpg\",imageSource:\"Wikimedia Commons\",books:[\"David Copperfield\",\"A Tale of Two City\",\"Roughing It\"]},{name:\"William Shakespeare\",imageUrl:\"images/authors/williamshakespeare.jpg\",imageSource:\"Wikimedia Commons\",books:[\"Hamlet\",\"Macbeth\",\"Romeo and Juliet\"]},{name:\"Joanne Rowling\",imageUrl:\"images/authors/jkrowling.jpg\",imageSource:\"Wikimedia Commons\",imageAttribution:\"Pinguino\",books:[\" Harry Potter and the Sorcerers Stone \"]}])};r.a.render(o.a.createElement(g,h),document.getElementById(\"root\"))}],[[5,2,1]]]);","extractedComments":[]}